name: GitHub Actions Demo
run-name: ${{ github.actor }} is testing out GitHub Actions 🚀
on: [push]
env:
    WORKFLOW_ENV: Workflow-level-env-var
jobs:
    Github-Actions-Environment-Variables:
        runs-on: ubuntu-latest
        env:
            JOB_ENV: "Job level env var"
            REPOENV: ${{ vars.ENVIRONMENT_RepoEnvironment }}
        environment: 'RepoEnvironment' # ${{ vars.TEST_ENV }}
        steps:
            - run: echo "List some common GitHub Actions environment variable names:"
            - run: echo "REPOENV - $JOB_ENV - ${{ vars.USE_VARIABLES }} - $REPOENV and ${{ vars[env.REPOENV].TESTENVVAR }} and ${{ secrets[env.REPOENV].TESTENVSECRET }}"
            - run: echo -e "github.actor - ${{ github.actor }}" \
                        "\ngithub.action - ${{ github.action }}" \
                        "\ngithub.event_name - ${{ github.event_name }}" \
                        "\ngithub.job - ${{ github.job }}" \
                        "\nrunner.os - ${{ runner.os }}" \
                        "\ngithub.repository - ${{ github.repository }}" \
                        "\ngithub.ref - ${{ github.ref }}" \
                        "\ngithub.workspace - ${{ github.workspace }}" \
                        "\njob.status - ${{ job.status }}" \
                        "\nWORKFLOW_ENV - $WORKFLOW_ENV" \
                        "\nJOB_ENV - $JOB_ENV" \
                        "\nSTEP_ENV - $STEP_ENV" \
                        "\nREPOACTIONVAR - ${{ vars.REPOACTIONVAR }}" \
                        "\nREPOACTIONSECRET - ${{ secrets.REPOACTIONSECRET }}" \
                        "\nENVIRONMENT_VAR - ${{ vars.ENVIRONMENT_VAR }}" \
                        "\nENVIRONMENT_SECRET - ${{ secrets.ENVIRONMENT_SECRET }}"
              env:
                STEP_ENV: "Step level env var"
            # - name: Dump env context
            #   env:
            #     ENV_CONTEXT: ${{ toJson(env) }}
            #   run: echo "$ENV_CONTEXT"
            - name: Dump vars context
              env:
                $VARS_CONTEXT: ${{ toJson(vars) }}
              run: echo "$VARS_CONTEXT"
            # - name: Dump GitHub context
            #   env:
            #     GITHUB_CONTEXT: ${{ toJson(github) }}
            #   run: echo "$GITHUB_CONTEXT"
            # - name: Dump job context
            #   env:
            #     JOB_CONTEXT: ${{ toJson(job) }}
            #   run: echo "$JOB_CONTEXT"
            # - name: Dump steps context
            #   env:
            #     STEPS_CONTEXT: ${{ toJson(steps) }}
            #   run: echo "$STEPS_CONTEXT"
            # - name: Dump runner context
            #   env:
            #     RUNNER_CONTEXT: ${{ toJson(runner) }}
            #   run: echo "$RUNNER_CONTEXT"
            # - name: Dump strategy context
            #   env:
            #     STRATEGY_CONTEXT: ${{ toJson(strategy) }}
            #   run: echo "$STRATEGY_CONTEXT"
            # - name: Dump matrix context
            #   env:
            #     MATRIX_CONTEXT: ${{ toJson(matrix) }}
            #   run: echo "$MATRIX_CONTEXT"
    Explore-Github-Actions:
        needs: Github-Actions-Environment-Variables
        runs-on: ubuntu-latest
        steps:
            - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
            - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
            - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
            - name: Check out repository code
              uses: actions/checkout@v4
            - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
            - run: echo "🖥️ The workflow is now ready to test your code on the runner."
            - name: List files in the repository
              run: |
                ls --recursive ${{ github.workspace }}
            - run: echo "🍏 This job's status is ${{ job.status }}."
